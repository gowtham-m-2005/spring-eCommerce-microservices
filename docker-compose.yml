version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: userDb
    ports:
      - "8092:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  service-registry:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    image: frostyfox77/ecom-service-registry:0.5.0
    container_name: service-registry
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8761:8761"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
    networks:
      - microservices-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    image: frostyfox77/ecom-user-service:0.5.0
    container_name: user-service
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    networks:
      - microservices-network

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    image: frostyfox77/ecom-product-service:0.5.0
    container_name: product-service
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    networks:
      - microservices-network

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    image: frostyfox77/ecom-cart-service:0.5.0
    container_name: cart-service
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    networks:
      - microservices-network

volumes:
  postgres_data:

networks:
  microservices-network:
    driver: bridge